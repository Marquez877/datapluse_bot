#!/usr/bin/env python3
"""
üîç –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –°–û–ó–î–ê–ù–ò–Ø –ú–£–†–ê–í–¨–ï–í
–ö–æ–º–∞–Ω–¥–∞ MACAN team: –≠—Ä–º–µ–∫ –û–∑–≥–æ–Ω–±–µ–∫–æ–≤, –≠–ª–¥–∏—è—Ä –ê–¥—ã–ª–±–µ–∫–æ–≤, –ö–∞–Ω—ã–∫–µ–π –ê—à—ã—Ä–∞–∫–º–∞–Ω–æ–≤–∞
"""

from config import APIclient

def diagnose_ant_creation():
    """–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –ø—Ä–æ–±–ª–µ–º —Å —Å–æ–∑–¥–∞–Ω–∏–µ–º –º—É—Ä–∞–≤—å–µ–≤"""
    
    print("üîç –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –°–û–ó–î–ê–ù–ò–Ø –ú–£–†–ê–í–¨–ï–í")
    print("=" * 50)
    
    client = APIclient(use_test_server=True)
    arena_data = client.get_arena()
    
    if not arena_data:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –∞—Ä–µ–Ω—ã")
        return
    
    ants = arena_data.get('ants', [])
    home_coords = arena_data.get('home', [])
    spot = arena_data.get('spot', {})
    
    print(f"üìä –¢–ï–ö–£–©–ê–Ø –°–ò–¢–£–ê–¶–ò–Ø:")
    print(f"–ù–∞—à–∏—Ö –º—É—Ä–∞–≤—å–µ–≤: {len(ants)}")
    print(f"–•–æ–¥ ‚Ññ: {arena_data.get('turnNo', 0)}")
    print(f"–°—á–µ—Ç: {arena_data.get('score', 0)}")
    
    print(f"\nüè† –ú–£–†–ê–í–ï–ô–ù–ò–ö:")
    print(f"–ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –¥–æ–º–∞: {home_coords}")
    print(f"–û—Å–Ω–æ–≤–Ω–æ–π –≥–µ–∫—Å (spot): {spot}")
    
    # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –ø–æ–∑–∏—Ü–∏–∏ –º—É—Ä–∞–≤—å–µ–≤
    print(f"\nüêú –ê–ù–ê–õ–ò–ó –ú–£–†–ê–í–¨–ï–í:")
    main_hex = (spot.get('q', 0), spot.get('r', 0))
    types_on_main = []
    
    for i, ant in enumerate(ants):
        ant_pos = (ant['q'], ant['r'])
        ant_type = ant['type']
        type_name = {0: '–†–∞–±–æ—á–∏–π', 1: '–ë–æ–µ—Ü', 2: '–†–∞–∑–≤–µ–¥—á–∏–∫'}.get(ant_type, '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π')
        
        print(f"  {i+1}. {type_name} –Ω–∞ ({ant['q']}, {ant['r']})")
        print(f"     –ó–¥–æ—Ä–æ–≤—å–µ: {ant['health']}")
        
        if ant.get('food'):
            print(f"     –ù–µ—Å–µ—Ç —Ä–µ—Å—É—Ä—Å: —Ç–∏–ø {ant['food'].get('type')}, –∫–æ–ª-–≤–æ {ant['food'].get('amount')}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—Ç–æ–∏—Ç –ª–∏ –Ω–∞ –æ—Å–Ω–æ–≤–Ω–æ–º –≥–µ–∫—Å–µ
        if ant_pos == main_hex:
            print(f"     ‚ö†Ô∏è  –°–¢–û–ò–¢ –ù–ê –û–°–ù–û–í–ù–û–ú –ì–ï–ö–°–ï! –ë–ª–æ–∫–∏—Ä—É–µ—Ç —Å–æ–∑–¥–∞–Ω–∏–µ {type_name}")
            types_on_main.append(type_name)
    
    print(f"\nüö® –ü–†–û–ë–õ–ï–ú–´ –° –°–û–ó–î–ê–ù–ò–ï–ú:")
    if types_on_main:
        print(f"‚ùå –ù–∞ –æ—Å–Ω–æ–≤–Ω–æ–º –≥–µ–∫—Å–µ —Å—Ç–æ—è—Ç: {', '.join(types_on_main)}")
        print("   –≠—Ç–æ –±–ª–æ–∫–∏—Ä—É–µ—Ç —Å–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤—ã—Ö –º—É—Ä–∞–≤—å–µ–≤ —Ç–∞–∫–æ–≥–æ –∂–µ —Ç–∏–ø–∞!")
        print("   –†–ï–®–ï–ù–ò–ï: –ø–µ—Ä–µ–º–µ—Å—Ç–∏—Ç–µ –∏—Ö —Å –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –≥–µ–∫—Å–∞")
    else:
        print("‚úÖ –û—Å–Ω–æ–≤–Ω–æ–π –≥–µ–∫—Å —Å–≤–æ–±–æ–¥–µ–Ω - –º—É—Ä–∞–≤—å–∏ –¥–æ–ª–∂–Ω—ã —Å–æ–∑–¥–∞–≤–∞—Ç—å—Å—è")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–∏–º–∏—Ç—ã
    print(f"\nüìà –õ–ò–ú–ò–¢–´:")
    print(f"–¢–µ–∫—É—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ: {len(ants)}/100")
    if len(ants) >= 100:
        print("‚ùå –î–û–°–¢–ò–ì–ù–£–¢ –õ–ò–ú–ò–¢ 100 –ú–£–†–ê–í–¨–ï–í!")
    else:
        print(f"‚úÖ –ú–µ—Å—Ç–æ –µ—Å—Ç—å: –º–æ–∂–Ω–æ —Å–æ–∑–¥–∞—Ç—å –µ—â–µ {100 - len(ants)} –º—É—Ä–∞–≤—å–µ–≤")
    
    # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ —Ç–∏–ø–∞–º
    worker_count = sum(1 for ant in ants if ant['type'] == 0)
    fighter_count = sum(1 for ant in ants if ant['type'] == 1) 
    scout_count = sum(1 for ant in ants if ant['type'] == 2)
    
    print(f"\nüìä –°–¢–ê–¢–ò–°–¢–ò–ö–ê –ü–û –¢–ò–ü–ê–ú:")
    print(f"–†–∞–±–æ—á–∏–µ: {worker_count} (–¥–æ–ª–∂–Ω–æ –±—ã—Ç—å ~60%)")
    print(f"–ë–æ–π—Ü—ã: {fighter_count} (–¥–æ–ª–∂–Ω–æ –±—ã—Ç—å ~30%)")
    print(f"–†–∞–∑–≤–µ–¥—á–∏–∫–∏: {scout_count} (–¥–æ–ª–∂–Ω–æ –±—ã—Ç—å ~10%)")
    
    print(f"\nüí° –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:")
    if types_on_main:
        print("1. –ü–µ—Ä–µ–º–µ—Å—Ç–∏—Ç–µ –º—É—Ä–∞–≤—å–µ–≤ —Å –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –≥–µ–∫—Å–∞")
        print("2. –û—Å–Ω–æ–≤–Ω–æ–π –≥–µ–∫—Å –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤—Å–µ–≥–¥–∞ —Å–≤–æ–±–æ–¥–µ–Ω")
    if len(ants) < 10:
        print("3. –£ –≤–∞—Å –º–∞–ª–æ –º—É—Ä–∞–≤—å–µ–≤ - –ø—Ä–æ–≤–µ—Ä—å—Ç–µ, –Ω–µ –ø–æ–≥–∏–±–∞—é—Ç –ª–∏ –æ–Ω–∏")
        print("4. –ò–∑–±–µ–≥–∞–π—Ç–µ –∫–∏—Å–ª–æ—Ç–Ω—ã—Ö –≥–µ–∫—Å–æ–≤")
        print("5. –î–µ—Ä–∂–∏—Ç–µ—Å—å –ø–æ–¥–∞–ª—å—à–µ –æ—Ç –≤—Ä–∞–≥–æ–≤")
    
    return arena_data

if __name__ == "__main__":
    diagnose_ant_creation()
