"""
–ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ API DatsPulse
"""
from config import APIclient
import time

def quick_api_test():
    """–ë—ã—Å—Ç—Ä–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ API —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è"""
    print("üîå –ë–´–°–¢–†–´–ô –¢–ï–°–¢ API DATSPULSE")
    print("=" * 40)
    
    # –¢–µ—Å—Ç —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞
    print("\nüß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¢–ï–°–¢–û–í–û–ì–û —Å–µ—Ä–≤–µ—Ä–∞...")
    test_client = APIclient(use_test_server=True)
    
    try:
        # –¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–∞—É–Ω–¥–æ–≤
        rounds_info = test_client.get_rounds_info()
        if rounds_info:
            print("‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π —Å–µ—Ä–≤–µ—Ä: –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ OK")
            print(f"üìä –î–∞–Ω–Ω—ã–µ –ø–æ–ª—É—á–µ–Ω—ã: {type(rounds_info)}")
        else:
            print("‚ùå –¢–µ—Å—Ç–æ–≤—ã–π —Å–µ—Ä–≤–µ—Ä: –ù–µ—Ç –æ—Ç–≤–µ—Ç–∞")
            
        # –¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è –∞—Ä–µ–Ω—ã (–º–æ–∂–µ—Ç –±—ã—Ç—å –æ—à–∏–±–∫–∞ –µ—Å–ª–∏ –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã)
        arena_data = test_client.get_arena()
        if arena_data:
            print("‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π —Å–µ—Ä–≤–µ—Ä: –î–∞–Ω–Ω—ã–µ –∞—Ä–µ–Ω—ã –ø–æ–ª—É—á–µ–Ω—ã")
            print(f"üéÆ –ù–∞–π–¥–µ–Ω–æ –º—É—Ä–∞–≤—å–µ–≤: {len(arena_data.get('ants', []))}")
            print(f"üëπ –ù–∞–π–¥–µ–Ω–æ –≤—Ä–∞–≥–æ–≤: {len(arena_data.get('enemies', []))}")
            print(f"üçé –ù–∞–π–¥–µ–Ω–æ —Ä–µ—Å—É—Ä—Å–æ–≤: {len(arena_data.get('food', []))}")
            print(f"üèÜ –¢–µ–∫—É—â–∏–π —Å—á–µ—Ç: {arena_data.get('score', 0)}")
        else:
            print("‚ö†Ô∏è –¢–µ—Å—Ç–æ–≤—ã–π —Å–µ—Ä–≤–µ—Ä: –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –∞—Ä–µ–Ω—ã (–≤–æ–∑–º–æ–∂–Ω–æ, –Ω—É–∂–Ω–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è)")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞: {e}")
    
    # –¢–µ—Å—Ç –±–æ–µ–≤–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞
    print("\n‚öîÔ∏è –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ë–û–ï–í–û–ì–û —Å–µ—Ä–≤–µ—Ä–∞...")
    prod_client = APIclient(use_test_server=False)
    
    try:
        rounds_info = prod_client.get_rounds_info()
        if rounds_info:
            print("‚úÖ –ë–æ–µ–≤–æ–π —Å–µ—Ä–≤–µ—Ä: –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ OK")
        else:
            print("‚ùå –ë–æ–µ–≤–æ–π —Å–µ—Ä–≤–µ—Ä: –ù–µ—Ç –æ—Ç–≤–µ—Ç–∞")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –±–æ–µ–≤–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞: {e}")
    
    print("\n" + "=" * 40)
    print("‚úÖ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω!")
    print("\n–î–ª—è –ø–æ–ª–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∑–∞–ø—É—Å—Ç–∏—Ç–µ:")
    print("python training.py")

def test_registration():
    """–¢–µ—Å—Ç —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –Ω–∞ —Ä–∞—É–Ω–¥"""
    print("\nüìù –¢–ï–°–¢ –†–ï–ì–ò–°–¢–†–ê–¶–ò–ò –ù–ê –†–ê–£–ù–î")
    print("=" * 40)
    
    client = APIclient(use_test_server=True)  # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π —Å–µ—Ä–≤–µ—Ä
    
    try:
        result = client.register_for_round()
        if result:
            print("‚úÖ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞!")
            print(f"üìã –û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞:")
            print(f"   {result}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–∞–Ω–Ω—ã–µ –∞—Ä–µ–Ω—ã –ø–æ—Å–ª–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
            time.sleep(1)
            arena_data = client.get_arena()
            if arena_data:
                print(f"\nüéÆ –î–∞–Ω–Ω—ã–µ –∞—Ä–µ–Ω—ã –ø–æ—Å–ª–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏:")
                print(f"   –ú—É—Ä–∞–≤—å–µ–≤: {len(arena_data.get('ants', []))}")
                print(f"   –•–æ–¥ –Ω–æ–º–µ—Ä: {arena_data.get('turnNo', 'N/A')}")
                print(f"   –î–æ —Å–ª–µ–¥—É—é—â–µ–≥–æ —Ö–æ–¥–∞: {arena_data.get('nextTurnIn', 0)} —Å–µ–∫")
                print(f"   –î–æ–º: {arena_data.get('home', [])}")
            else:
                print("‚ö†Ô∏è –î–∞–Ω–Ω—ã–µ –∞—Ä–µ–Ω—ã –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã")
                
        else:
            print("‚ùå –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –Ω–µ —É–¥–∞–ª–∞—Å—å")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: {e}")

def show_api_info():
    """–ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± API"""
    print("\nüìñ –ò–ù–§–û–†–ú–ê–¶–ò–Ø –û API")
    print("=" * 40)
    print("üåê –¢–µ—Å—Ç–æ–≤—ã–π —Å–µ—Ä–≤–µ—Ä: https://games-test.datsteam.dev/api")
    print("üåê –ë–æ–µ–≤–æ–π —Å–µ—Ä–≤–µ—Ä: https://games.datsteam.dev/api")
    print("üìö –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: https://games.datsteam.dev/static/datspulse/openapi/#/")
    print("\nüìã –î–æ—Å—Ç—É–ø–Ω—ã–µ endpoints:")
    print("   GET  /api/arena     - –°–æ—Å—Ç–æ—è–Ω–∏–µ –∞—Ä–µ–Ω—ã")
    print("   POST /api/move      - –û—Ç–ø—Ä–∞–≤–∫–∞ –∫–æ–º–∞–Ω–¥")
    print("   POST /api/register  - –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –Ω–∞ —Ä–∞—É–Ω–¥")
    print("   GET  /api/logs      - –ñ—É—Ä–Ω–∞–ª –¥–µ–π—Å—Ç–≤–∏–π")
    print("   GET  /api/rounds    - –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ä–∞—É–Ω–¥–∞—Ö")
    print("\n‚ö° –õ–∏–º–∏—Ç: 3 –∑–∞–ø—Ä–æ—Å–∞ –≤ —Å–µ–∫—É–Ω–¥—É")
    print("üîë –¢—Ä–µ–±—É–µ—Ç—Å—è —Ç–æ–∫–µ–Ω –≤ –∑–∞–≥–æ–ª–æ–≤–∫–µ Authorization")

if __name__ == "__main__":
    while True:
        print("\n" + "üéØ –ú–ï–ù–Æ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø API")
        print("=" * 30)
        print("1. –ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è")
        print("2. –¢–µ—Å—Ç —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –Ω–∞ —Ä–∞—É–Ω–¥")
        print("3. –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± API")
        print("4. –ü–æ–ª–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ (training.py)")
        print("5. –í—ã—Ö–æ–¥")
        
        choice = input("\n–í—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é (1-5): ").strip()
        
        if choice == '1':
            quick_api_test()
        elif choice == '2':
            test_registration()
        elif choice == '3':
            show_api_info()
        elif choice == '4':
            import subprocess
            import sys
            try:
                subprocess.run([sys.executable, "training.py"], check=True)
            except subprocess.CalledProcessError as e:
                print(f"–û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ training.py: {e}")
            except FileNotFoundError:
                print("–§–∞–π–ª training.py –Ω–µ –Ω–∞–π–¥–µ–Ω")
        elif choice == '5':
            print("üëã –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!")
            break
        else:
            print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä")
