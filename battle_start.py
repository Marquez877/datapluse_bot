#!/usr/bin/env python3
"""
üèÜ –ë–û–ï–í–û–ô –°–¢–ê–†–¢ –î–õ–Ø –ó–ê–†–ï–ì–ò–°–¢–†–ò–†–û–í–ê–ù–ù–û–ô –ö–û–ú–ê–ù–î–´
–ö–æ–º–∞–Ω–¥–∞ MACAN team: –≠—Ä–º–µ–∫ –û–∑–≥–æ–Ω–±–µ–∫–æ–≤, –≠–ª–¥–∏—è—Ä –ê–¥—ã–ª–±–µ–∫–æ–≤, –ö–∞–Ω—ã–∫–µ–π –ê—à—ã—Ä–∞–∫–º–∞–Ω–æ–≤–∞

–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ –¥–ª—è —É—á–∞—Å—Ç–∏—è –≤ —Ä–∞—É–Ω–¥–µ –ë–ï–ó –ø–æ–≤—Ç–æ—Ä–Ω–æ–π —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
"""

import sys
import time
from config import APIclient, data

def battle_start():
    """–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ –¥–ª—è —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–π –∫–æ–º–∞–Ω–¥—ã"""
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞—Ä–≥—É–º–µ–Ω—Ç—ã –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏  
    use_test_server = True
    if len(sys.argv) > 1 and sys.argv[1] == "--prod":
        use_test_server = False
        print("‚öîÔ∏è –ó–ê–ü–£–°–ö –ù–ê –ë–û–ï–í–û–ú –°–ï–†–í–ï–†–ï!")
        print(f"–ö–æ–º–∞–Ω–¥–∞: {data['name']}")
        print("–£—á–∞—Å—Ç–Ω–∏–∫–∏:", ", ".join(data['members']))
        confirm = input("–í–≤–µ–¥–∏—Ç–µ 'YES' –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è: ")
        if confirm != 'YES':
            print("‚ùå –ó–∞–ø—É—Å–∫ –æ—Ç–º–µ–Ω–µ–Ω")
            return False
    
    client = APIclient(use_test_server=use_test_server)
    
    print("üéÆ –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∞—Ä–µ–Ω—ã...")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –º–æ–∂–µ–º –ª–∏ –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –∞—Ä–µ–Ω—ã (–∑–Ω–∞—á–∏—Ç —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã)
    arena_data = client.get_arena()
    if not arena_data:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –∞—Ä–µ–Ω—ã")
        print("–í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:")
        print("1. –†–∞—É–Ω–¥ –µ—â–µ –Ω–µ –Ω–∞—á–∞–ª—Å—è")
        print("2. –ö–æ–º–∞–Ω–¥–∞ –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∞") 
        print("3. –ü—Ä–æ–±–ª–µ–º—ã —Å —Ç–æ–∫–µ–Ω–æ–º")
        return False
        
    print("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –∞—Ä–µ–Ω–µ —É—Å–ø–µ—à–Ω–æ!")
    print(f"üêú –ù–∞—à–∏—Ö –º—É—Ä–∞–≤—å–µ–≤: {len(arena_data.get('myAnts', []))}")
    print(f"‚è∞ –î–æ —Å–ª–µ–¥—É—é—â–µ–≥–æ —Ö–æ–¥–∞: {arena_data.get('nextTurnIn', 0):.1f} —Å–µ–∫")
    
    # –û—Å–Ω–æ–≤–Ω–æ–π –∏–≥—Ä–æ–≤–æ–π —Ü–∏–∫–ª
    turn_count = 0
    try:
        print("üöÄ –ù–ê–ß–ò–ù–ê–ï–ú –ë–û–ï–í–û–ô –†–ê–£–ù–î!")
        print("=" * 50)
        
        while True:
            turn_count += 1
            print(f"\n=== –•–û–î {turn_count} ===")
            
            # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–µ –¥–∞–Ω–Ω—ã–µ –∞—Ä–µ–Ω—ã
            arena_data = client.get_arena()
            if not arena_data:
                print("‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –∞—Ä–µ–Ω—ã")
                time.sleep(1)
                continue
                
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –ø—Ä–æ–¥–æ–ª–∂–∞–µ—Ç—Å—è –ª–∏ —Ä–∞—É–Ω–¥
            next_turn_in = arena_data.get('nextTurnIn', 0)
            if next_turn_in <= 0:
                print("üèÅ –†–ê–£–ù–î –ó–ê–í–ï–†–®–ï–ù!")
                print(f"–û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ö–æ–¥–æ–≤: {turn_count-1}")
                break
                
            # –í—ã–ø–æ–ª–Ω—è–µ–º —Ö–æ–¥
            success = client.execute_turn()
            if not success:
                print("‚ö†Ô∏è –û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Ö–æ–¥–∞, –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º...")
            
            # –ñ–¥–µ–º –¥–æ —Å–ª–µ–¥—É—é—â–µ–≥–æ —Ö–æ–¥–∞
            sleep_time = max(0.5, next_turn_in - 0.2)  # –ù–µ–±–æ–ª—å—à–æ–π –∑–∞–ø–∞—Å
            if sleep_time > 0:
                time.sleep(sleep_time)
                
    except KeyboardInterrupt:
        print(f"\n‚èπÔ∏è –û—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º –Ω–∞ —Ö–æ–¥—É {turn_count}")
        print("–î–ª—è –≤–æ–∑–æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∑–∞–ø—É—Å—Ç–∏—Ç–µ:")
        server_flag = "--prod" if not use_test_server else ""
        print(f"python battle_start.py {server_flag}")
        
    except Exception as e:
        print(f"\nüí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –Ω–∞ —Ö–æ–¥—É {turn_count}: {e}")
        print("–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞:")
        server_flag = "--prod" if not use_test_server else ""
        print(f"python battle_start.py {server_flag}")
        import traceback
        traceback.print_exc()
        
    return True

if __name__ == "__main__":
    battle_start()
