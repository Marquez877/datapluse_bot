#!/usr/bin/env python3
"""
üîç –î–ï–¢–ê–õ–¨–ù–ê–Ø –ü–†–û–í–ï–†–ö–ê –†–ï–ì–ò–°–¢–†–ê–¶–ò–ò
"""

import requests
import os
from dotenv import load_dotenv

load_dotenv()
TOKEN = os.getenv("TOKEN")

def test_registration():
    """–î–µ—Ç–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏"""
    
    team_data = {
        "name": "MACAN team",
        "members": [
            "–≠—Ä–º–µ–∫ –û–∑–≥–æ–Ω–±–µ–∫–æ–≤",
            "–≠–ª–¥–∏—è—Ä –ê–¥—ã–ª–±–µ–∫–æ–≤", 
            "–ö–∞–Ω—ã–∫–µ–π –ê—à—ã—Ä–∞–∫–º–∞–Ω–æ–≤–∞"
        ]
    }
    
    headers = {
        "Content-Type": "application/json",
        "Accept": "application/json"
    }
    
    base_url = "https://games.datsteam.dev/api"
    
    print("üîç –î–ï–¢–ê–õ–¨–ù–ê–Ø –ü–†–û–í–ï–†–ö–ê –†–ï–ì–ò–°–¢–†–ê–¶–ò–ò")
    print("=" * 50)
    print(f"–ö–æ–º–∞–Ω–¥–∞: {team_data['name']}")
    print(f"–£—á–∞—Å—Ç–Ω–∏–∫–∏: {team_data['members']}")
    print(f"–¢–æ–∫–µ–Ω: {TOKEN[:8]}...")
    print("=" * 50)
    
    try:
        url = f"{base_url}/register"
        params = {"token": TOKEN}
        
        print(f"URL: {url}")
        print(f"–ü–∞—Ä–∞–º–µ—Ç—Ä—ã: {params}")
        print(f"–î–∞–Ω–Ω—ã–µ: {team_data}")
        
        response = requests.post(url, headers=headers, json=team_data, params=params, timeout=10)
        
        print(f"\n–û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞:")
        print(f"–°—Ç–∞—Ç—É—Å: {response.status_code}")
        print(f"–ó–∞–≥–æ–ª–æ–≤–∫–∏ –æ—Ç–≤–µ—Ç–∞: {dict(response.headers)}")
        print(f"–¢–µ–ª–æ –æ—Ç–≤–µ—Ç–∞: {response.text}")
        
        if response.status_code == 200 or response.status_code == 201:
            print("‚úÖ –†–ï–ì–ò–°–¢–†–ê–¶–ò–Ø –£–°–ü–ï–®–ù–ê!")
            return True
        elif response.status_code == 409:
            print("‚úÖ –£–ñ–ï –ó–ê–†–ï–ì–ò–°–¢–†–ò–†–û–í–ê–ù–´!")
            return True
        else:
            print("‚ùå –û–®–ò–ë–ö–ê –†–ï–ì–ò–°–¢–†–ê–¶–ò–ò")
            return False
            
    except Exception as e:
        print(f"‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ: {e}")
        return False

def test_arena_access():
    """–¢–µ—Å—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ –∞—Ä–µ–Ω–µ –ø–æ—Å–ª–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏"""
    
    base_url = "https://games.datsteam.dev/api"
    params = {"token": TOKEN}
    headers = {
        "Content-Type": "application/json",
        "Accept": "application/json"
    }
    
    print("\nüèüÔ∏è –ü–†–û–í–ï–†–ö–ê –î–û–°–¢–£–ü–ê –ö –ê–†–ï–ù–ï")
    print("=" * 50)
    
    try:
        url = f"{base_url}/arena"
        response = requests.get(url, headers=headers, params=params, timeout=10)
        
        print(f"URL: {url}")
        print(f"–°—Ç–∞—Ç—É—Å: {response.status_code}")
        print(f"–û—Ç–≤–µ—Ç: {response.text[:500]}...")
        
        if response.status_code == 200:
            data = response.json()
            print("‚úÖ –î–û–°–¢–£–ü –ö –ê–†–ï–ù–ï –ü–û–õ–£–ß–ï–ù!")
            print(f"–ù–∞—à–∏—Ö –º—É—Ä–∞–≤—å–µ–≤: {len(data.get('ants', []))}")
            print(f"–î–æ —Å–ª–µ–¥—É—é—â–µ–≥–æ —Ö–æ–¥–∞: {data.get('nextTurnIn', 0)} —Å–µ–∫")
            return True
        else:
            print("‚ùå –ù–ï–¢ –î–û–°–¢–£–ü–ê –ö –ê–†–ï–ù–ï")
            return False
            
    except Exception as e:
        print(f"‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ: {e}")
        return False

if __name__ == "__main__":
    registration_ok = test_registration()
    if registration_ok:
        arena_ok = test_arena_access()
        if arena_ok:
            print("\nüéâ –í–°–ï –ì–û–¢–û–í–û –î–õ–Ø –ò–ì–†–´!")
        else:
            print("\n‚è≥ –î–û–ñ–î–ò–¢–ï–°–¨ –ù–ê–ß–ê–õ–ê –†–ê–£–ù–î–ê")
    else:
        print("\n‚ùå –ü–†–û–ë–õ–ï–ú–´ –° –†–ï–ì–ò–°–¢–†–ê–¶–ò–ï–ô")
